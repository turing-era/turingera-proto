// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: robot.proto

package robot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RobotType int32

const (
	RobotType_ROBOT_TYPE_UNKNOWN RobotType = 0
	RobotType_ROBOT_TYPE_NORMAL  RobotType = 1
	RobotType_ROBOT_TYPE_REPLICA RobotType = 2
)

// Enum value maps for RobotType.
var (
	RobotType_name = map[int32]string{
		0: "ROBOT_TYPE_UNKNOWN",
		1: "ROBOT_TYPE_NORMAL",
		2: "ROBOT_TYPE_REPLICA",
	}
	RobotType_value = map[string]int32{
		"ROBOT_TYPE_UNKNOWN": 0,
		"ROBOT_TYPE_NORMAL":  1,
		"ROBOT_TYPE_REPLICA": 2,
	}
)

func (x RobotType) Enum() *RobotType {
	p := new(RobotType)
	*p = x
	return p
}

func (x RobotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RobotType) Descriptor() protoreflect.EnumDescriptor {
	return file_robot_proto_enumTypes[0].Descriptor()
}

func (RobotType) Type() protoreflect.EnumType {
	return &file_robot_proto_enumTypes[0]
}

func (x RobotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RobotType.Descriptor instead.
func (RobotType) EnumDescriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{0}
}

type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{0}
}

func (x *Identity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Identity) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Identity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Gender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NameEn string `protobuf:"bytes,2,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`
}

func (x *Gender) Reset() {
	*x = Gender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gender) ProtoMessage() {}

func (x *Gender) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gender.ProtoReflect.Descriptor instead.
func (*Gender) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{1}
}

func (x *Gender) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Gender) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

type RobotBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId    string `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Location   string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	BotType    uint32 `protobuf:"varint,6,opt,name=bot_type,json=botType,proto3" json:"bot_type,omitempty"` // RobotType
	CreateTime int64  `protobuf:"varint,20,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *RobotBasic) Reset() {
	*x = RobotBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotBasic) ProtoMessage() {}

func (x *RobotBasic) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotBasic.ProtoReflect.Descriptor instead.
func (*RobotBasic) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{2}
}

func (x *RobotBasic) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *RobotBasic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RobotBasic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RobotBasic) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RobotBasic) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RobotBasic) GetBotType() uint32 {
	if x != nil {
		return x.BotType
	}
	return 0
}

func (x *RobotBasic) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type SubDialogueStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cate     uint32 `protobuf:"varint,1,opt,name=cate,proto3" json:"cate,omitempty"`
	SubStyle string `protobuf:"bytes,2,opt,name=sub_style,json=subStyle,proto3" json:"sub_style,omitempty"`
}

func (x *SubDialogueStyle) Reset() {
	*x = SubDialogueStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubDialogueStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubDialogueStyle) ProtoMessage() {}

func (x *SubDialogueStyle) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubDialogueStyle.ProtoReflect.Descriptor instead.
func (*SubDialogueStyle) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{3}
}

func (x *SubDialogueStyle) GetCate() uint32 {
	if x != nil {
		return x.Cate
	}
	return 0
}

func (x *SubDialogueStyle) GetSubStyle() string {
	if x != nil {
		return x.SubStyle
	}
	return ""
}

type DialogueStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Main string              `protobuf:"bytes,2,opt,name=main,proto3" json:"main,omitempty"`
	Subs []*SubDialogueStyle `protobuf:"bytes,3,rep,name=subs,proto3" json:"subs,omitempty"`
}

func (x *DialogueStyle) Reset() {
	*x = DialogueStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogueStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogueStyle) ProtoMessage() {}

func (x *DialogueStyle) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogueStyle.ProtoReflect.Descriptor instead.
func (*DialogueStyle) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{4}
}

func (x *DialogueStyle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DialogueStyle) GetMain() string {
	if x != nil {
		return x.Main
	}
	return ""
}

func (x *DialogueStyle) GetSubs() []*SubDialogueStyle {
	if x != nil {
		return x.Subs
	}
	return nil
}

type RobotCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age            uint32           `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`                                            // 年龄
	Gender         *Gender          `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`                                       // 性别
	Identity       *Identity        `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`                                   // 身份
	DialogueStyles []*DialogueStyle `protobuf:"bytes,4,rep,name=dialogue_styles,json=dialogueStyles,proto3" json:"dialogue_styles,omitempty"` // 对话风格
}

func (x *RobotCore) Reset() {
	*x = RobotCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotCore) ProtoMessage() {}

func (x *RobotCore) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotCore.ProtoReflect.Descriptor instead.
func (*RobotCore) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{5}
}

func (x *RobotCore) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *RobotCore) GetGender() *Gender {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *RobotCore) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *RobotCore) GetDialogueStyles() []*DialogueStyle {
	if x != nil {
		return x.DialogueStyles
	}
	return nil
}

type RobotDynamic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score     int32  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`                          // 积分
	GameTotal uint32 `protobuf:"varint,2,opt,name=game_total,json=gameTotal,proto3" json:"game_total,omitempty"` // 总场数
	GameWin   uint32 `protobuf:"varint,3,opt,name=game_win,json=gameWin,proto3" json:"game_win,omitempty"`       // 胜利数
}

func (x *RobotDynamic) Reset() {
	*x = RobotDynamic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotDynamic) ProtoMessage() {}

func (x *RobotDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotDynamic.ProtoReflect.Descriptor instead.
func (*RobotDynamic) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{6}
}

func (x *RobotDynamic) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RobotDynamic) GetGameTotal() uint32 {
	if x != nil {
		return x.GameTotal
	}
	return 0
}

func (x *RobotDynamic) GetGameWin() uint32 {
	if x != nil {
		return x.GameWin
	}
	return 0
}

type Robot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basic   *RobotBasic   `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`
	Core    *RobotCore    `protobuf:"bytes,2,opt,name=core,proto3" json:"core,omitempty"`
	Dynamic *RobotDynamic `protobuf:"bytes,3,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
}

func (x *Robot) Reset() {
	*x = Robot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot) ProtoMessage() {}

func (x *Robot) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot.ProtoReflect.Descriptor instead.
func (*Robot) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{7}
}

func (x *Robot) GetBasic() *RobotBasic {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *Robot) GetCore() *RobotCore {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *Robot) GetDynamic() *RobotDynamic {
	if x != nil {
		return x.Dynamic
	}
	return nil
}

type MoodValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Joy      int32 `protobuf:"varint,1,opt,name=joy,proto3" json:"joy,omitempty"`
	Fear     int32 `protobuf:"varint,2,opt,name=fear,proto3" json:"fear,omitempty"`
	Trust    int32 `protobuf:"varint,3,opt,name=trust,proto3" json:"trust,omitempty"`
	Surprise int32 `protobuf:"varint,4,opt,name=surprise,proto3" json:"surprise,omitempty"`
}

func (x *MoodValue) Reset() {
	*x = MoodValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoodValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoodValue) ProtoMessage() {}

func (x *MoodValue) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoodValue.ProtoReflect.Descriptor instead.
func (*MoodValue) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{8}
}

func (x *MoodValue) GetJoy() int32 {
	if x != nil {
		return x.Joy
	}
	return 0
}

func (x *MoodValue) GetFear() int32 {
	if x != nil {
		return x.Fear
	}
	return 0
}

func (x *MoodValue) GetTrust() int32 {
	if x != nil {
		return x.Trust
	}
	return 0
}

func (x *MoodValue) GetSurprise() int32 {
	if x != nil {
		return x.Surprise
	}
	return 0
}

type PersonalityValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Positive  int32 `protobuf:"varint,1,opt,name=positive,proto3" json:"positive,omitempty"`
	Peaceful  int32 `protobuf:"varint,2,opt,name=peaceful,proto3" json:"peaceful,omitempty"`
	Open      int32 `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	Extravert int32 `protobuf:"varint,4,opt,name=extravert,proto3" json:"extravert,omitempty"`
}

func (x *PersonalityValue) Reset() {
	*x = PersonalityValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalityValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalityValue) ProtoMessage() {}

func (x *PersonalityValue) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalityValue.ProtoReflect.Descriptor instead.
func (*PersonalityValue) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{9}
}

func (x *PersonalityValue) GetPositive() int32 {
	if x != nil {
		return x.Positive
	}
	return 0
}

func (x *PersonalityValue) GetPeaceful() int32 {
	if x != nil {
		return x.Peaceful
	}
	return 0
}

func (x *PersonalityValue) GetOpen() int32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *PersonalityValue) GetExtravert() int32 {
	if x != nil {
		return x.Extravert
	}
	return 0
}

type Personality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterTraits []string          `protobuf:"bytes,1,rep,name=character_traits,json=characterTraits,proto3" json:"character_traits,omitempty"`
	Mood            *MoodValue        `protobuf:"bytes,2,opt,name=mood,proto3" json:"mood,omitempty"`
	Personality     *PersonalityValue `protobuf:"bytes,3,opt,name=personality,proto3" json:"personality,omitempty"`
}

func (x *Personality) Reset() {
	*x = Personality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Personality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Personality) ProtoMessage() {}

func (x *Personality) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Personality.ProtoReflect.Descriptor instead.
func (*Personality) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{10}
}

func (x *Personality) GetCharacterTraits() []string {
	if x != nil {
		return x.CharacterTraits
	}
	return nil
}

func (x *Personality) GetMood() *MoodValue {
	if x != nil {
		return x.Mood
	}
	return nil
}

func (x *Personality) GetPersonality() *PersonalityValue {
	if x != nil {
		return x.Personality
	}
	return nil
}

type Phrase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phrase  string `protobuf:"bytes,1,opt,name=phrase,proto3" json:"phrase,omitempty"`
	Meaning string `protobuf:"bytes,2,opt,name=meaning,proto3" json:"meaning,omitempty"`
	Example string `protobuf:"bytes,3,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *Phrase) Reset() {
	*x = Phrase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phrase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phrase) ProtoMessage() {}

func (x *Phrase) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phrase.ProtoReflect.Descriptor instead.
func (*Phrase) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{11}
}

func (x *Phrase) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

func (x *Phrase) GetMeaning() string {
	if x != nil {
		return x.Meaning
	}
	return ""
}

func (x *Phrase) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

type PhraseComb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rows []*Phrase `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *PhraseComb) Reset() {
	*x = PhraseComb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhraseComb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhraseComb) ProtoMessage() {}

func (x *PhraseComb) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhraseComb.ProtoReflect.Descriptor instead.
func (*PhraseComb) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{12}
}

func (x *PhraseComb) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PhraseComb) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PhraseComb) GetRows() []*Phrase {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Experience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *Experience) Reset() {
	*x = Experience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Experience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experience) ProtoMessage() {}

func (x *Experience) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experience.ProtoReflect.Descriptor instead.
func (*Experience) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{13}
}

func (x *Experience) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Experience) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Experience) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type RobotDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId     string        `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	Personality *Personality  `protobuf:"bytes,2,opt,name=personality,proto3" json:"personality,omitempty"`
	Phrase      *PhraseComb   `protobuf:"bytes,3,opt,name=phrase,proto3" json:"phrase,omitempty"`
	Experiences []*Experience `protobuf:"bytes,4,rep,name=experiences,proto3" json:"experiences,omitempty"`
	UseEcho     bool          `protobuf:"varint,20,opt,name=use_echo,json=useEcho,proto3" json:"use_echo,omitempty"`            // 是否使用秘密
	UseAboutMe  bool          `protobuf:"varint,21,opt,name=use_about_me,json=useAboutMe,proto3" json:"use_about_me,omitempty"` // 是否使用关于我
}

func (x *RobotDetail) Reset() {
	*x = RobotDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotDetail) ProtoMessage() {}

func (x *RobotDetail) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotDetail.ProtoReflect.Descriptor instead.
func (*RobotDetail) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{14}
}

func (x *RobotDetail) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *RobotDetail) GetPersonality() *Personality {
	if x != nil {
		return x.Personality
	}
	return nil
}

func (x *RobotDetail) GetPhrase() *PhraseComb {
	if x != nil {
		return x.Phrase
	}
	return nil
}

func (x *RobotDetail) GetExperiences() []*Experience {
	if x != nil {
		return x.Experiences
	}
	return nil
}

func (x *RobotDetail) GetUseEcho() bool {
	if x != nil {
		return x.UseEcho
	}
	return false
}

func (x *RobotDetail) GetUseAboutMe() bool {
	if x != nil {
		return x.UseAboutMe
	}
	return false
}

type GetEditOptionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEditOptionsReq) Reset() {
	*x = GetEditOptionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditOptionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditOptionsReq) ProtoMessage() {}

func (x *GetEditOptionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditOptionsReq.ProtoReflect.Descriptor instead.
func (*GetEditOptionsReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{15}
}

type GetEditOptionsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genders        []*Gender        `protobuf:"bytes,1,rep,name=genders,proto3" json:"genders,omitempty"`
	Identities     []*Identity      `protobuf:"bytes,2,rep,name=identities,proto3" json:"identities,omitempty"`
	DialogueStyles []*DialogueStyle `protobuf:"bytes,3,rep,name=dialogue_styles,json=dialogueStyles,proto3" json:"dialogue_styles,omitempty"`
	PhraseComb     []*PhraseComb    `protobuf:"bytes,4,rep,name=phrase_comb,json=phraseComb,proto3" json:"phrase_comb,omitempty"`
	Experiences    []*Experience    `protobuf:"bytes,5,rep,name=experiences,proto3" json:"experiences,omitempty"`
}

func (x *GetEditOptionsRsp) Reset() {
	*x = GetEditOptionsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditOptionsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditOptionsRsp) ProtoMessage() {}

func (x *GetEditOptionsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditOptionsRsp.ProtoReflect.Descriptor instead.
func (*GetEditOptionsRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{16}
}

func (x *GetEditOptionsRsp) GetGenders() []*Gender {
	if x != nil {
		return x.Genders
	}
	return nil
}

func (x *GetEditOptionsRsp) GetIdentities() []*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

func (x *GetEditOptionsRsp) GetDialogueStyles() []*DialogueStyle {
	if x != nil {
		return x.DialogueStyles
	}
	return nil
}

func (x *GetEditOptionsRsp) GetPhraseComb() []*PhraseComb {
	if x != nil {
		return x.PhraseComb
	}
	return nil
}

func (x *GetEditOptionsRsp) GetExperiences() []*Experience {
	if x != nil {
		return x.Experiences
	}
	return nil
}

type GetRobotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId    string `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	NeedDetail bool   `protobuf:"varint,2,opt,name=need_detail,json=needDetail,proto3" json:"need_detail,omitempty"`
}

func (x *GetRobotReq) Reset() {
	*x = GetRobotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRobotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotReq) ProtoMessage() {}

func (x *GetRobotReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotReq.ProtoReflect.Descriptor instead.
func (*GetRobotReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{17}
}

func (x *GetRobotReq) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *GetRobotReq) GetNeedDetail() bool {
	if x != nil {
		return x.NeedDetail
	}
	return false
}

type GetRobotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot  *Robot       `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	Detail *RobotDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *GetRobotRsp) Reset() {
	*x = GetRobotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRobotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRobotRsp) ProtoMessage() {}

func (x *GetRobotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRobotRsp.ProtoReflect.Descriptor instead.
func (*GetRobotRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{18}
}

func (x *GetRobotRsp) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *GetRobotRsp) GetDetail() *RobotDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type NewRobotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot  *Robot       `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	Detail *RobotDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *NewRobotReq) Reset() {
	*x = NewRobotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRobotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRobotReq) ProtoMessage() {}

func (x *NewRobotReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRobotReq.ProtoReflect.Descriptor instead.
func (*NewRobotReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{19}
}

func (x *NewRobotReq) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *NewRobotReq) GetDetail() *RobotDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type NewRobotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot  *Robot       `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	Detail *RobotDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *NewRobotRsp) Reset() {
	*x = NewRobotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRobotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRobotRsp) ProtoMessage() {}

func (x *NewRobotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRobotRsp.ProtoReflect.Descriptor instead.
func (*NewRobotRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{20}
}

func (x *NewRobotRsp) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *NewRobotRsp) GetDetail() *RobotDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type EditRobotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot  *Robot       `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	Detail *RobotDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *EditRobotReq) Reset() {
	*x = EditRobotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditRobotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRobotReq) ProtoMessage() {}

func (x *EditRobotReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRobotReq.ProtoReflect.Descriptor instead.
func (*EditRobotReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{21}
}

func (x *EditRobotReq) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *EditRobotReq) GetDetail() *RobotDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type EditRobotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot  *Robot       `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	Detail *RobotDetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *EditRobotRsp) Reset() {
	*x = EditRobotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditRobotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRobotRsp) ProtoMessage() {}

func (x *EditRobotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRobotRsp.ProtoReflect.Descriptor instead.
func (*EditRobotRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{22}
}

func (x *EditRobotRsp) GetRobot() *Robot {
	if x != nil {
		return x.Robot
	}
	return nil
}

func (x *EditRobotRsp) GetDetail() *RobotDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type DeleteRobotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId string `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
}

func (x *DeleteRobotReq) Reset() {
	*x = DeleteRobotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRobotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRobotReq) ProtoMessage() {}

func (x *DeleteRobotReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRobotReq.ProtoReflect.Descriptor instead.
func (*DeleteRobotReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteRobotReq) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

type DeleteRobotRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRobotRsp) Reset() {
	*x = DeleteRobotRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRobotRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRobotRsp) ProtoMessage() {}

func (x *DeleteRobotRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRobotRsp.ProtoReflect.Descriptor instead.
func (*DeleteRobotRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{24}
}

type GetMyRobotsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotType uint32 `protobuf:"varint,1,opt,name=bot_type,json=botType,proto3" json:"bot_type,omitempty"` // RobotType
}

func (x *GetMyRobotsReq) Reset() {
	*x = GetMyRobotsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyRobotsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyRobotsReq) ProtoMessage() {}

func (x *GetMyRobotsReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyRobotsReq.ProtoReflect.Descriptor instead.
func (*GetMyRobotsReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{25}
}

func (x *GetMyRobotsReq) GetBotType() uint32 {
	if x != nil {
		return x.BotType
	}
	return 0
}

type GetMyRobotsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robots []*Robot `protobuf:"bytes,1,rep,name=robots,proto3" json:"robots,omitempty"`
}

func (x *GetMyRobotsRsp) Reset() {
	*x = GetMyRobotsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyRobotsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyRobotsRsp) ProtoMessage() {}

func (x *GetMyRobotsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyRobotsRsp.ProtoReflect.Descriptor instead.
func (*GetMyRobotsRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{26}
}

func (x *GetMyRobotsRsp) GetRobots() []*Robot {
	if x != nil {
		return x.Robots
	}
	return nil
}

type RecommendRobotsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecommendRobotsReq) Reset() {
	*x = RecommendRobotsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendRobotsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendRobotsReq) ProtoMessage() {}

func (x *RecommendRobotsReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendRobotsReq.ProtoReflect.Descriptor instead.
func (*RecommendRobotsReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{27}
}

type RecommendRobotsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robots []*Robot `protobuf:"bytes,1,rep,name=robots,proto3" json:"robots,omitempty"`
}

func (x *RecommendRobotsRsp) Reset() {
	*x = RecommendRobotsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendRobotsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendRobotsRsp) ProtoMessage() {}

func (x *RecommendRobotsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendRobotsRsp.ProtoReflect.Descriptor instead.
func (*RecommendRobotsRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{28}
}

func (x *RecommendRobotsRsp) GetRobots() []*Robot {
	if x != nil {
		return x.Robots
	}
	return nil
}

type RandomRobotIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RandomRobotIDReq) Reset() {
	*x = RandomRobotIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomRobotIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomRobotIDReq) ProtoMessage() {}

func (x *RandomRobotIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomRobotIDReq.ProtoReflect.Descriptor instead.
func (*RandomRobotIDReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{29}
}

type RandomRobotIDRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId string `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
}

func (x *RandomRobotIDRsp) Reset() {
	*x = RandomRobotIDRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomRobotIDRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomRobotIDRsp) ProtoMessage() {}

func (x *RandomRobotIDRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomRobotIDRsp.ProtoReflect.Descriptor instead.
func (*RandomRobotIDRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{30}
}

func (x *RandomRobotIDRsp) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

type UpdateDynamicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId string        `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	Dynamic *RobotDynamic `protobuf:"bytes,2,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
}

func (x *UpdateDynamicReq) Reset() {
	*x = UpdateDynamicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDynamicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDynamicReq) ProtoMessage() {}

func (x *UpdateDynamicReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDynamicReq.ProtoReflect.Descriptor instead.
func (*UpdateDynamicReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateDynamicReq) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *UpdateDynamicReq) GetDynamic() *RobotDynamic {
	if x != nil {
		return x.Dynamic
	}
	return nil
}

type UpdateDynamicRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDynamicRsp) Reset() {
	*x = UpdateDynamicRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDynamicRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDynamicRsp) ProtoMessage() {}

func (x *UpdateDynamicRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDynamicRsp.ProtoReflect.Descriptor instead.
func (*UpdateDynamicRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{32}
}

type UpdateUseKnowledgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId      string `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	UseKnowledge bool   `protobuf:"varint,2,opt,name=use_knowledge,json=useKnowledge,proto3" json:"use_knowledge,omitempty"`
	KType        uint32 `protobuf:"varint,3,opt,name=k_type,json=kType,proto3" json:"k_type,omitempty"`
}

func (x *UpdateUseKnowledgeReq) Reset() {
	*x = UpdateUseKnowledgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUseKnowledgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUseKnowledgeReq) ProtoMessage() {}

func (x *UpdateUseKnowledgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUseKnowledgeReq.ProtoReflect.Descriptor instead.
func (*UpdateUseKnowledgeReq) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateUseKnowledgeReq) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *UpdateUseKnowledgeReq) GetUseKnowledge() bool {
	if x != nil {
		return x.UseKnowledge
	}
	return false
}

func (x *UpdateUseKnowledgeReq) GetKType() uint32 {
	if x != nil {
		return x.KType
	}
	return 0
}

type UpdateUseKnowledgeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUseKnowledgeRsp) Reset() {
	*x = UpdateUseKnowledgeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_robot_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUseKnowledgeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUseKnowledgeRsp) ProtoMessage() {}

func (x *UpdateUseKnowledgeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_robot_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUseKnowledgeRsp.ProtoReflect.Descriptor instead.
func (*UpdateUseKnowledgeRsp) Descriptor() ([]byte, []int) {
	return file_robot_proto_rawDescGZIP(), []int{34}
}

var File_robot_proto protoreflect.FileDescriptor

var file_robot_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x74,
	0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x22, 0x42, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x31, 0x0a, 0x06, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x22, 0xc4, 0x01, 0x0a,
	0x0a, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x75, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x71, 0x0a, 0x0d, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3c, 0x0a,
	0x04, 0x73, 0x75, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x04, 0x73, 0x75, 0x62, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x09,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x4e, 0x0a, 0x0f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x52, 0x0e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x73, 0x22, 0x5e, 0x0a, 0x0c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x77,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x57, 0x69,
	0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x05,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x35, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x07,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x22, 0x63, 0x0a, 0x09,
	0x4d, 0x6f, 0x6f, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6a, 0x6f, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x65, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x22, 0x7c, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x76, 0x65, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x76, 0x65, 0x72, 0x74, 0x22,
	0xbb, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x6d, 0x6f,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x2e, 0x4d, 0x6f, 0x6f, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x6f,
	0x64, 0x12, 0x4a, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x54, 0x0a,
	0x06, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x22, 0x64, 0x0a, 0x0a, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x50, 0x0a, 0x0a, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0xae, 0x02, 0x0a, 0x0b,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x0a,
	0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x62, 0x52, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x75, 0x73, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x5f, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x4d, 0x65, 0x22, 0x13, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x22, 0xea, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74,
	0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x62, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x2e, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x52, 0x0a, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x12, 0x44, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x49,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e,
	0x65, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3b, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a, 0x0b, 0x4e, 0x65,
	0x77, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3b,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a, 0x0b, 0x4e,
	0x65, 0x77, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x75, 0x72, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12,
	0x3b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x80, 0x01, 0x0a,
	0x0c, 0x45, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a,
	0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74,
	0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0x80, 0x01, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x05,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x2b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x22,
	0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x2b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x47,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52,
	0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x22, 0x4b, 0x0a,
	0x12, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x52, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x22, 0x2d,
	0x0a, 0x10, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x52,
	0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x22, 0x12, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x73, 0x70,
	0x22, 0x6e, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x73, 0x70, 0x2a, 0x52, 0x0a, 0x09, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x10, 0x02, 0x32, 0xde, 0x07,
	0x0a, 0x08, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x76, 0x72, 0x12, 0x66, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x74,
	0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x23,
	0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x12, 0x23, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x4e, 0x65,
	0x77, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x74, 0x75, 0x72, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x09, 0x45, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x24, 0x2e, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x63, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49,
	0x44, 0x12, 0x28, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x44, 0x52, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x28, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x12, 0x2d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2d, 0x2e, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x73, 0x70, 0x42, 0x37,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x72,
	0x69, 0x6e, 0x67, 0x2d, 0x65, 0x72, 0x61, 0x2f, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_robot_proto_rawDescOnce sync.Once
	file_robot_proto_rawDescData = file_robot_proto_rawDesc
)

func file_robot_proto_rawDescGZIP() []byte {
	file_robot_proto_rawDescOnce.Do(func() {
		file_robot_proto_rawDescData = protoimpl.X.CompressGZIP(file_robot_proto_rawDescData)
	})
	return file_robot_proto_rawDescData
}

var file_robot_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_robot_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_robot_proto_goTypes = []interface{}{
	(RobotType)(0),                // 0: turingera.server.robot.RobotType
	(*Identity)(nil),              // 1: turingera.server.robot.Identity
	(*Gender)(nil),                // 2: turingera.server.robot.Gender
	(*RobotBasic)(nil),            // 3: turingera.server.robot.RobotBasic
	(*SubDialogueStyle)(nil),      // 4: turingera.server.robot.SubDialogueStyle
	(*DialogueStyle)(nil),         // 5: turingera.server.robot.DialogueStyle
	(*RobotCore)(nil),             // 6: turingera.server.robot.RobotCore
	(*RobotDynamic)(nil),          // 7: turingera.server.robot.RobotDynamic
	(*Robot)(nil),                 // 8: turingera.server.robot.Robot
	(*MoodValue)(nil),             // 9: turingera.server.robot.MoodValue
	(*PersonalityValue)(nil),      // 10: turingera.server.robot.PersonalityValue
	(*Personality)(nil),           // 11: turingera.server.robot.Personality
	(*Phrase)(nil),                // 12: turingera.server.robot.Phrase
	(*PhraseComb)(nil),            // 13: turingera.server.robot.PhraseComb
	(*Experience)(nil),            // 14: turingera.server.robot.Experience
	(*RobotDetail)(nil),           // 15: turingera.server.robot.RobotDetail
	(*GetEditOptionsReq)(nil),     // 16: turingera.server.robot.GetEditOptionsReq
	(*GetEditOptionsRsp)(nil),     // 17: turingera.server.robot.GetEditOptionsRsp
	(*GetRobotReq)(nil),           // 18: turingera.server.robot.GetRobotReq
	(*GetRobotRsp)(nil),           // 19: turingera.server.robot.GetRobotRsp
	(*NewRobotReq)(nil),           // 20: turingera.server.robot.NewRobotReq
	(*NewRobotRsp)(nil),           // 21: turingera.server.robot.NewRobotRsp
	(*EditRobotReq)(nil),          // 22: turingera.server.robot.EditRobotReq
	(*EditRobotRsp)(nil),          // 23: turingera.server.robot.EditRobotRsp
	(*DeleteRobotReq)(nil),        // 24: turingera.server.robot.DeleteRobotReq
	(*DeleteRobotRsp)(nil),        // 25: turingera.server.robot.DeleteRobotRsp
	(*GetMyRobotsReq)(nil),        // 26: turingera.server.robot.GetMyRobotsReq
	(*GetMyRobotsRsp)(nil),        // 27: turingera.server.robot.GetMyRobotsRsp
	(*RecommendRobotsReq)(nil),    // 28: turingera.server.robot.RecommendRobotsReq
	(*RecommendRobotsRsp)(nil),    // 29: turingera.server.robot.RecommendRobotsRsp
	(*RandomRobotIDReq)(nil),      // 30: turingera.server.robot.RandomRobotIDReq
	(*RandomRobotIDRsp)(nil),      // 31: turingera.server.robot.RandomRobotIDRsp
	(*UpdateDynamicReq)(nil),      // 32: turingera.server.robot.UpdateDynamicReq
	(*UpdateDynamicRsp)(nil),      // 33: turingera.server.robot.UpdateDynamicRsp
	(*UpdateUseKnowledgeReq)(nil), // 34: turingera.server.robot.UpdateUseKnowledgeReq
	(*UpdateUseKnowledgeRsp)(nil), // 35: turingera.server.robot.UpdateUseKnowledgeRsp
}
var file_robot_proto_depIdxs = []int32{
	4,  // 0: turingera.server.robot.DialogueStyle.subs:type_name -> turingera.server.robot.SubDialogueStyle
	2,  // 1: turingera.server.robot.RobotCore.gender:type_name -> turingera.server.robot.Gender
	1,  // 2: turingera.server.robot.RobotCore.identity:type_name -> turingera.server.robot.Identity
	5,  // 3: turingera.server.robot.RobotCore.dialogue_styles:type_name -> turingera.server.robot.DialogueStyle
	3,  // 4: turingera.server.robot.Robot.basic:type_name -> turingera.server.robot.RobotBasic
	6,  // 5: turingera.server.robot.Robot.core:type_name -> turingera.server.robot.RobotCore
	7,  // 6: turingera.server.robot.Robot.dynamic:type_name -> turingera.server.robot.RobotDynamic
	9,  // 7: turingera.server.robot.Personality.mood:type_name -> turingera.server.robot.MoodValue
	10, // 8: turingera.server.robot.Personality.personality:type_name -> turingera.server.robot.PersonalityValue
	12, // 9: turingera.server.robot.PhraseComb.rows:type_name -> turingera.server.robot.Phrase
	11, // 10: turingera.server.robot.RobotDetail.personality:type_name -> turingera.server.robot.Personality
	13, // 11: turingera.server.robot.RobotDetail.phrase:type_name -> turingera.server.robot.PhraseComb
	14, // 12: turingera.server.robot.RobotDetail.experiences:type_name -> turingera.server.robot.Experience
	2,  // 13: turingera.server.robot.GetEditOptionsRsp.genders:type_name -> turingera.server.robot.Gender
	1,  // 14: turingera.server.robot.GetEditOptionsRsp.identities:type_name -> turingera.server.robot.Identity
	5,  // 15: turingera.server.robot.GetEditOptionsRsp.dialogue_styles:type_name -> turingera.server.robot.DialogueStyle
	13, // 16: turingera.server.robot.GetEditOptionsRsp.phrase_comb:type_name -> turingera.server.robot.PhraseComb
	14, // 17: turingera.server.robot.GetEditOptionsRsp.experiences:type_name -> turingera.server.robot.Experience
	8,  // 18: turingera.server.robot.GetRobotRsp.robot:type_name -> turingera.server.robot.Robot
	15, // 19: turingera.server.robot.GetRobotRsp.detail:type_name -> turingera.server.robot.RobotDetail
	8,  // 20: turingera.server.robot.NewRobotReq.robot:type_name -> turingera.server.robot.Robot
	15, // 21: turingera.server.robot.NewRobotReq.detail:type_name -> turingera.server.robot.RobotDetail
	8,  // 22: turingera.server.robot.NewRobotRsp.robot:type_name -> turingera.server.robot.Robot
	15, // 23: turingera.server.robot.NewRobotRsp.detail:type_name -> turingera.server.robot.RobotDetail
	8,  // 24: turingera.server.robot.EditRobotReq.robot:type_name -> turingera.server.robot.Robot
	15, // 25: turingera.server.robot.EditRobotReq.detail:type_name -> turingera.server.robot.RobotDetail
	8,  // 26: turingera.server.robot.EditRobotRsp.robot:type_name -> turingera.server.robot.Robot
	15, // 27: turingera.server.robot.EditRobotRsp.detail:type_name -> turingera.server.robot.RobotDetail
	8,  // 28: turingera.server.robot.GetMyRobotsRsp.robots:type_name -> turingera.server.robot.Robot
	8,  // 29: turingera.server.robot.RecommendRobotsRsp.robots:type_name -> turingera.server.robot.Robot
	7,  // 30: turingera.server.robot.UpdateDynamicReq.dynamic:type_name -> turingera.server.robot.RobotDynamic
	16, // 31: turingera.server.robot.RobotSvr.GetEditOptions:input_type -> turingera.server.robot.GetEditOptionsReq
	18, // 32: turingera.server.robot.RobotSvr.GetRobot:input_type -> turingera.server.robot.GetRobotReq
	20, // 33: turingera.server.robot.RobotSvr.NewRobot:input_type -> turingera.server.robot.NewRobotReq
	22, // 34: turingera.server.robot.RobotSvr.EditRobot:input_type -> turingera.server.robot.EditRobotReq
	24, // 35: turingera.server.robot.RobotSvr.DeleteRobot:input_type -> turingera.server.robot.DeleteRobotReq
	26, // 36: turingera.server.robot.RobotSvr.GetMyRobots:input_type -> turingera.server.robot.GetMyRobotsReq
	28, // 37: turingera.server.robot.RobotSvr.RecommendRobots:input_type -> turingera.server.robot.RecommendRobotsReq
	30, // 38: turingera.server.robot.RobotSvr.RandomRobotID:input_type -> turingera.server.robot.RandomRobotIDReq
	32, // 39: turingera.server.robot.RobotSvr.UpdateDynamic:input_type -> turingera.server.robot.UpdateDynamicReq
	34, // 40: turingera.server.robot.RobotSvr.UpdateUseKnowledge:input_type -> turingera.server.robot.UpdateUseKnowledgeReq
	17, // 41: turingera.server.robot.RobotSvr.GetEditOptions:output_type -> turingera.server.robot.GetEditOptionsRsp
	19, // 42: turingera.server.robot.RobotSvr.GetRobot:output_type -> turingera.server.robot.GetRobotRsp
	21, // 43: turingera.server.robot.RobotSvr.NewRobot:output_type -> turingera.server.robot.NewRobotRsp
	23, // 44: turingera.server.robot.RobotSvr.EditRobot:output_type -> turingera.server.robot.EditRobotRsp
	25, // 45: turingera.server.robot.RobotSvr.DeleteRobot:output_type -> turingera.server.robot.DeleteRobotRsp
	27, // 46: turingera.server.robot.RobotSvr.GetMyRobots:output_type -> turingera.server.robot.GetMyRobotsRsp
	29, // 47: turingera.server.robot.RobotSvr.RecommendRobots:output_type -> turingera.server.robot.RecommendRobotsRsp
	31, // 48: turingera.server.robot.RobotSvr.RandomRobotID:output_type -> turingera.server.robot.RandomRobotIDRsp
	33, // 49: turingera.server.robot.RobotSvr.UpdateDynamic:output_type -> turingera.server.robot.UpdateDynamicRsp
	35, // 50: turingera.server.robot.RobotSvr.UpdateUseKnowledge:output_type -> turingera.server.robot.UpdateUseKnowledgeRsp
	41, // [41:51] is the sub-list for method output_type
	31, // [31:41] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_robot_proto_init() }
func file_robot_proto_init() {
	if File_robot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_robot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubDialogueStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogueStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotDynamic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoodValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalityValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Personality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phrase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhraseComb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Experience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditOptionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditOptionsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRobotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRobotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRobotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRobotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditRobotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditRobotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRobotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRobotRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyRobotsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyRobotsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendRobotsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendRobotsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomRobotIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomRobotIDRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDynamicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDynamicRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUseKnowledgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_robot_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUseKnowledgeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_robot_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_robot_proto_goTypes,
		DependencyIndexes: file_robot_proto_depIdxs,
		EnumInfos:         file_robot_proto_enumTypes,
		MessageInfos:      file_robot_proto_msgTypes,
	}.Build()
	File_robot_proto = out.File
	file_robot_proto_rawDesc = nil
	file_robot_proto_goTypes = nil
	file_robot_proto_depIdxs = nil
}
