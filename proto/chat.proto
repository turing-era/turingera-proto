syntax = "proto3";
package turingera.server.chat;
option go_package = "github.com/turing-era/turingera-proto/go/server/chat";

message Message {
  string id = 1;
  string user = 2;
  int64 created_at = 3;
  string text = 4; // 文字
  string pic = 5; // 图片
  bool hit_knowledge = 10; // 命中知识
  uint32 pleasure = 11; // 愉悦度数值
}

message Info {
  // 基本信息
  string chat_id = 1;
  uint32 chat_time = 2;
  string user_id = 3;
  int64 created_at = 4;
  uint32 num_participants = 5;
  string partner_id = 6;
  string partner_name = 7;
  string partner_avatar = 8;
  bool is_my_turn = 9;
  uint32 turn_time = 10;
  bool is_active = 11;
  bool assign = 12;
  string starter = 13;
  uint32 msg_count = 14;

  // 对话详情
  repeated Message messages = 20;
  // 结果
  bool guessed = 50;
  bool correct = 51;
  int32 score = 52;

  // replica对话使用
  string cur_nick = 100;
  string cur_platform = 101;
  string cur_location = 102;

  // 知识库信息
  uint32 knowledge_count = 201;
  string knowledge_status = 202;
  repeated string hit_knowledge_ids = 203;
  uint32 hit_knowledge_count = 204;
}

message NewChatReq {
  string robot_id = 1; // 对话机器人ID，为空表示匹配
  string user_id = 2; // public必填
  string nick = 3; // public必填
  string platform = 4;
}

message NewChatRsp {
  Info info = 1;
}

message WaitMessageReq {
  string chat_id = 1;
}

message WaitMessageRsp {
  Info info = 1;
}

message SendMessageReq {
  string chat_id = 1;
  string user_id = 2;
  string text = 3;
}

message SendMessageRsp {
  Info info = 1;
}

enum UserType {
  USER_TYPE_HUMAN = 0;
  USER_TYPE_ROBOT = 1;
}

message GuessReq {
  string chat_id = 1;
  uint32 partner_type = 2; // UserType
}

message GuessRsp {
  uint32 partner_type = 1; // UserType
  bool correct = 2;
  int32 score = 3;
}

message WaitGuessReq {
  string chat_id = 1;
}

message WaitGuessRsp {
  Info info = 1;
}

message ShareReq {
  string chat_id = 1;
}

message ShareRsp {

}

message GetChatInfoReq {
  string chat_id = 1;
}

message GetChatInfoRsp {
  Info info = 1;
}

message GetRobotChatHistoryReq {
  string robot_id = 1;
  bytes cookie = 2;
}

message GetRobotChatHistoryRsp {
  repeated Info infos = 1;
  bytes cookie = 2;
  bool is_end = 3;
}

service ChatSvr {
  // 新建对话
  rpc NewChat (NewChatReq) returns (NewChatRsp);
  // 发送消息
  rpc SendMessage (SendMessageReq) returns (SendMessageRsp);
  // 等待消息
  rpc WaitMessage (WaitMessageReq) returns (WaitMessageRsp);
  // 做出判断
  rpc Guess (GuessReq) returns (GuessRsp);
  // 等待判断
  rpc WaitGuess (WaitGuessReq) returns (WaitGuessRsp);
  // 分享
  rpc Share (ShareReq) returns (ShareRsp);
  // 获取对话详情
  rpc GetChatInfo (GetChatInfoReq) returns (GetChatInfoRsp);
  // 获取AI对话记录
  rpc GetRobotChatHistory (GetRobotChatHistoryReq) returns (GetRobotChatHistoryRsp);

  // public新建对话
  rpc PublicNewChat (NewChatReq) returns (NewChatRsp);
  // public发送消息
  rpc PublicSendMessage (SendMessageReq) returns (SendMessageRsp);
}